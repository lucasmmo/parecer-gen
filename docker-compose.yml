services:
  # localstack:
  #   image: localstack/localstack
  #   ports:
  #     - "127.0.0.1:4566:4566"
  #     - "127.0.0.1:4510-4559:4510-4559"
  #   environment:
  #     - DEBUG=${DEBUG:-0}
  #   volumes:
  #     - ./localstack/volume/:/var/lib/localstack
  #     - "/var/run/docker.sock:/var/run/docker.sock"

  frontend:
    build: ./web/frontend
    command: npm run dev
    develop:
      watch:
        - action: sync
          path: ./web/frontend
          target: /app
          ignore:
            - node_modules/
    ports:
      - "3000:3000"

  backend:
    build:
      context: ./web/backend
      target: dev
    command: air
    develop:
      watch:
        - action: sync
          path: ./web/backend
          target: /app
          ignore:
            - go.sum
        - action: rebuild
          path: go.mod
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres

  postgres:
    image: postgres:latest
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 3s
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata:
